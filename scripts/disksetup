#!/usr/bin/env bash

get_disk_size() {
    local disk_path=$1
    debug $DEBUG_DEBUG "Getting disk size for: $disk_path"
    local size=$(lsblk -b -n -d -o SIZE "$disk_path")
    local size_gb=$(( size / 1024 / 1024 / 1024 ))
    debug $DEBUG_DEBUG "Disk size: ${size_gb}GB"
    echo $size_gb
}

partdrive() {
    debug $DEBUG_INFO "Starting disk partitioning"
    printf "%s\n" "${bold}Partitioning drive"

    # Get total disk size in GB
    debug $DEBUG_DEBUG "Calculating disk size"
    DISK_SIZE=$(get_disk_size "$DISK")
    
    # Only calculate and prompt for swap size if not provided via command line
    if [[ -z "$SWAP_SIZE" ]]; then
        debug $DEBUG_DEBUG "No swap size provided via command line, calculating recommended size"
        # Calculate recommended swap size based on system RAM
        RAM_SIZE=$(( $(grep MemTotal /proc/meminfo | awk '{print $2}') / 1024 / 1024 ))
        if [ $RAM_SIZE -le 2 ]; then
            RECOMMENDED_SWAP=$(( RAM_SIZE * 2 ))
        elif [ $RAM_SIZE -le 8 ]; then
            RECOMMENDED_SWAP=$RAM_SIZE
        else
            RECOMMENDED_SWAP=$RAM_SIZE
        fi
        debug $DEBUG_DEBUG "RAM: ${RAM_SIZE}GB, Recommended swap: ${RECOMMENDED_SWAP}GB"

        while true; do
            debug $DEBUG_DEBUG "Prompting for swap size"
            SWAP_SIZE=$(yad --form \
                --title="Swap Configuration" \
                --text="<b>Configure Swap Partition</b>\nRecommended size: ${RECOMMENDED_SWAP}GB\nAvailable disk space: ${DISK_SIZE}GB" \
                --field="Swap size (GB):NUM" "$RECOMMENDED_SWAP!1..${DISK_SIZE}!1" \
                --width=400 \
                --separator="" \
                --button="Cancel:1" \
                --button="OK:0")
            
            if [[ $? -eq 0 && -n "$SWAP_SIZE" && "$SWAP_SIZE" -lt "$DISK_SIZE" ]]; then
                debug $DEBUG_INFO "User selected swap size: ${SWAP_SIZE}GB"
                break
            else
                debug $DEBUG_WARN "Invalid swap size entered"
                yad --error \
                    --title="Invalid Input" \
                    --text="Invalid swap size! Please enter a value between 1 and ${DISK_SIZE}." \
                    --width=300
            fi
        done
    fi

    # Calculate remaining space after EFI (1GB) and swap
    REMAINING_SPACE=$(( DISK_SIZE - SWAP_SIZE - 1 ))
    debug $DEBUG_DEBUG "Remaining space after EFI and swap: ${REMAINING_SPACE}GB"

    # Start partitioning
    (
        echo "# Wiping disk..."
        echo "10"
        debug $DEBUG_DEBUG "Wiping disk: $DISK"
        sgdisk --zap-all "$DISK" >> "$LOG_FILE" 2>&1
        
        echo "# Creating EFI partition..."
        echo "30"
        debug $DEBUG_DEBUG "Creating EFI partition (1GB)"
        sgdisk -n1:0:+1G -t1:EF00 "$DISK" >> "$LOG_FILE" 2>&1
        
        if [[ "$FILESYSTEM" == "zfs" ]]; then
            echo "# Creating ZFS partition..."
            echo "50"
            sgdisk -n2:0:-${SWAP_SIZE}G -t2:BF00 "$DISK" >> "$LOG_FILE" 2>&1
        else
            echo "# Creating root partition..."
            echo "50"
            ROOT_SIZE=$(( REMAINING_SPACE * 40 / 100 ))
            sgdisk -n2:0:+${ROOT_SIZE}G -t2:8300 "$DISK" >> "$LOG_FILE" 2>&1
            
            echo "# Creating home partition..."
            echo "70"
            sgdisk -n3:0:-${SWAP_SIZE}G -t3:8300 "$DISK" >> "$LOG_FILE" 2>&1
        fi
        
        echo "# Creating swap partition..."
        echo "90"
        if [[ "$FILESYSTEM" == "zfs" ]]; then
            sgdisk -n3:0:0 -t3:8308 "$DISK" >> "$LOG_FILE" 2>&1
        else
            sgdisk -n4:0:0 -t4:8308 "$DISK" >> "$LOG_FILE" 2>&1
        fi
        
        echo "# Updating partition table..."
        echo "100"
        partprobe >> "$LOG_FILE" 2>&1
    ) | yad --progress \
        --title="Disk Partitioning" \
        --text="Partitioning drive..." \
        --width=400 \
        --height=100 \
        --auto-close \
        --auto-kill \
        --percentage=0

    if [[ $? -ne 0 ]]; then
        yad --error \
            --title="Partitioning Error" \
            --text="Failed to partition drive!\nCheck the logs for details." \
            --width=300
        error "Failed to partition drive!"
    fi

    yad --info \
        --title="Partitioning Complete" \
        --text="Drive partitioning completed successfully!" \
        --width=300
    
    debug $DEBUG_INFO "Partitioning completed successfully"
}