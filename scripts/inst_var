#!/usr/bin/env bash
installtz() {
    debug $DEBUG_INFO "Starting timezone configuration"
    printf "%s\n" "${bold}## Setting install variables"

    debug $DEBUG_DEBUG "Generating region list"
    region_list=$(find /usr/share/zoneinfo -mindepth 1 -maxdepth 1 -type d -printf "%f\n" | sort)

    # Create region selection list
    region=$(echo "$region_list" | yad --list \
        --title="Region Selection" \
        --text="Select your region:" \
        --width=400 \
        --height=400 \
        --column="Region" \
        --search-column=1 \
        --separator="" \
        --button="Cancel:1" \
        --button="Next:0")

    [[ -z "$region" ]] && error "No region selected!"
    debug $DEBUG_DEBUG "Selected region: $region"

    # Get cities for selected region
    debug $DEBUG_DEBUG "Generating city list for region: $region"
    city_list=$(find "/usr/share/zoneinfo/$region" -type f -printf "%f\n" | sort)

    # Create city selection list
    city=$(echo "$city_list" | yad --list \
        --title="City Selection" \
        --text="Select your city in $region:" \
        --width=400 \
        --height=400 \
        --column="City" \
        --search-column=1 \
        --separator="" \
        --button="Back:2" \
        --button="Select:0")

    [[ $? -eq 2 ]] && exec "$0" # Restart script if Back is clicked
    [[ -z "$city" ]] && error "No city selected!"
    
    INST_TZ="/usr/share/zoneinfo/$region/$city"
    debug $DEBUG_INFO "Timezone set to: $region/$city"
    
    yad --info \
        --title="Timezone Selection" \
        --text="Timezone set to: $region/$city" \
        --width=300
}

installkrn() {
    debug $DEBUG_INFO "Starting kernel selection"

    selected=$(yad --list \
        --title="Kernel Selection" \
        --text="Select the kernel to install:" \
        --width=300 \
        --height=200 \
        --radiolist \
        --column="Select" \
        --column="Kernel" \
        --column="Description" \
        TRUE "linux-zen" "Zen kernel" \
        FALSE "linux-lts" "Long-term support")

    case $selected in
        *zen*) INST_LINVAR="linux-zen" ;;
        *lts*) INST_LINVAR="linux-lts" ;;
        *) 
            yad --error \
                --title="Error" \
                --text="Invalid kernel selection!" \
                --width=300
            error "Invalid kernel choice!"
            ;;
    esac

    debug $DEBUG_INFO "Kernel selected: $INST_LINVAR"
    yad --info \
        --title="Kernel Selection" \
        --text="Selected kernel: $INST_LINVAR" \
        --width=300
}

selectdisk() {
    debug $DEBUG_INFO "Starting disk selection"
    printf "%s\n" "${bold}## Decide which disk you want to use"

    debug $DEBUG_DEBUG "Generating disk list"
    
    # Create formatted disk list with multiple columns
    disk_data=""
    while read -r disk; do
        if [[ "$disk" != *"part"* ]]; then
            device="/dev/disk/by-id/$disk"
            size=$(lsblk -dno SIZE "$device" 2>/dev/null)
            model=$(lsblk -dno MODEL "$device" 2>/dev/null)
            disk_data+="FALSE\n$disk\n$size\n$model\n"
        fi
    done < <(ls -1 /dev/disk/by-id)

    selected=$(echo -e "$disk_data" | yad --list \
        --title="Disk Selection" \
        --text="<span color='red'><b>WARNING: THIS WILL DELETE EVERYTHING ON THE SELECTED DRIVE!</b></span>" \
        --width=800 \
        --height=400 \
        --column="Select:CHK" \
        --column="Device" \
        --column="Size" \
        --column="Model" \
        --radiolist \
        --separator="" \
        --button="Cancel:1" \
        --button="Select:0")

    if [[ -z "$selected" ]]; then
        yad --error \
            --title="Error" \
            --text="No disk selected!" \
            --width=300
        error "No disk selected!"
    fi

    DISK="/dev/disk/by-id/${selected}"
    debug $DEBUG_INFO "Disk selected: $DISK"
    
    # Show confirmation with full device details
    size=$(lsblk -dno SIZE "$DISK" 2>/dev/null)
    model=$(lsblk -dno MODEL "$DISK" 2>/dev/null)
    yad --info \
        --title="Disk Selection" \
        --text="Selected disk:\n\nDevice: ${selected}\nSize: ${size}\nModel: ${model}" \
        --width=400
}